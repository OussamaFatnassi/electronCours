name: CI/CD Pipeline
on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master
jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 # checkout the repo
      - run: npm ci # install packages
      - run: npm test # run tests (configured to use jest-junit reporter)
      - uses: actions/upload-artifact@v4 # upload test results
        if: success() || failure() # run this step even if previous step failed
        with:
          name: test-results
          path: jest-junit.xml
          # coverage with sonarcloud
  coverage-sonarcloud:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2 # download test results
        with:
          name: test-results
      - uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=oussamafatnassi
            -Dsonar.projectKey=OussamaFatnassi_electronCours
            -Dsonar.sources=.
            -Dsonar.tests=.
            -Dsonar.test.inclusions=**/*.spec.js
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.testExecutionReportPaths=jest-junit.xml
            -Dsonar.coverage.exclusions=**/*.spec.js
            -Dsonar.exclusions=**/*.spec.js
            -Dsonar.javascript.exclusions=**/*.spec.js
            -Dsonar.javascript.inclusions=**/*.js
            -Dsonar.javascript.node.maxspace=4096
            -Dsonar.javascript.node.maxOldSpaceSize=4096
            -Dsonar.javascript.node.path=node_modules
            -Dsonar.javascript.node.version=20
